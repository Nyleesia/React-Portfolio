{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nylee\\\\OneDrive\\\\Documents\\\\React\\\\React-Portfolio\\\\client\\\\src\\\\components\\\\messageMe.component.js\";\nimport React, { Component } from \"react\";\nimport { Card, Form, Col } from \"react-bootstrap\";\n\nclass MessageMe extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      senderName: \"\",\n      senderEmail: \"\",\n      senderMessage: \"\"\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const user = user_ZzG73lWcGFLeDelYSCiwm;\n      this.sendMessage(this.setState({\n        senderEmail: \"\",\n        senderMessage: \"\",\n        senderName: \"\"\n      }));\n    };\n  }\n\n  sendMessage(senderName, senderEmail, senderMessage) {\n    window.emailjs.send(\"default_service\", senderName, senderEmail, senderMessage).then(res => {\n      this.setState({\n        formEmailSent: true\n      });\n    }) // Handle errors here however you like, or use a React error boundary\n    .catch(err => console.error('Failed to send feedback. Error: ', err));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"messageMeContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"messageInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"    \", React.createElement(\"h3\", {\n      className: \"contactCardHead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Message Me\"), React.createElement(Form, {\n      className: \"messageForm\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"Name\",\n      id: \"name\",\n      name: \"senderName\",\n      onChange: this.handleChange,\n      placeholder: \"Enter your name here\",\n      required: true,\n      value: this.state.senderName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), \" \", React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      name: \"senderEmail\",\n      onChange: this.handleChange,\n      placeholder: \"Enter your email here\",\n      required: true,\n      value: this.state.senderEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      controlId: \"formGridMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Message\"), React.createElement(\"input\", {\n      id: \"message\",\n      name: \"senderMessage\",\n      onChange: this.handleChange,\n      placeholder: \"Enter your message here\",\n      required: true,\n      value: this.state.senderMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"btn-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn--cancel\",\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(\"button\", {\n      variant: \"primary\",\n      type: \"submit\",\n      value: \"submit\",\n      className: \"btn btn--submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Send\")))));\n  }\n\n}\n\nexport default MessageMe;","map":{"version":3,"sources":["C:/Users/nylee/OneDrive/Documents/React/React-Portfolio/client/src/components/messageMe.component.js"],"names":["React","Component","Card","Form","Col","MessageMe","state","senderName","senderEmail","senderMessage","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","user","user_ZzG73lWcGFLeDelYSCiwm","sendMessage","window","emailjs","send","then","res","formEmailSent","catch","err","console","error","render","handleClose"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"; \r\nimport { Card, Form, Col } from \"react-bootstrap\";\r\n\r\nclass MessageMe extends Component {\r\n  state = { \r\n    senderName: \"\",\r\n    senderEmail: \"\",\r\n    senderMessage: \"\"\r\n  }\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n handleSubmit = event => {\r\n        event.preventDefault(); \r\n        const user = user_ZzG73lWcGFLeDelYSCiwm \r\n        this.sendMessage(\r\n          this.setState({senderEmail:\"\", senderMessage:\"\", senderName:\"\"})\r\n  )}\r\n\r\n       sendMessage (senderName, senderEmail, senderMessage) {\r\n         window.emailjs.send(\"default_service\",\r\n            senderName,\r\n            senderEmail,\r\n            senderMessage\r\n      )\r\n          .then(res => {\r\n            this.setState({ formEmailSent: true })\r\n          })\r\n          // Handle errors here however you like, or use a React error boundary\r\n          .catch(err => console.error('Failed to send feedback. Error: ', err))\r\n        }\r\n\r\n  render(){\r\n\r\n    return(\r\n        <div className = \"messageMeContainer\">\r\n          <Card className = \"messageInfo\">    <h3 className =\"contactCardHead\">Message Me</h3> \r\n            <Form className = \"messageForm\" onSubmit={this.handleSubmit}>\r\n              <Form.Row>\r\n                <Form.Group as={Col} controlId=\"formGridName\">\r\n                  <Form.Label>Name</Form.Label>\r\n                  <input type=\"Name\" \r\n                  id=\"name\"\r\n                  name=\"senderName\"\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Enter your name here\"\r\n                  required\r\n                  value={this.state.senderName}\r\n                  />\r\n\r\n                  </Form.Group> <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <input type=\"email\"\r\n                      id=\"email\"\r\n                      name=\"senderEmail\"\r\n                      onChange={this.handleChange}\r\n                      placeholder=\"Enter your email here\"\r\n                      required\r\n                      value={this.state.senderEmail} />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                  <Form.Group controlId=\"formGridMessage\">\r\n                    <Form.Label>Message</Form.Label>\r\n                    <input \r\n                    id=\"message\"\r\n                    name=\"senderMessage\"\r\n                    onChange={this.handleChange}\r\n                    placeholder=\"Enter your message here\"\r\n                    required\r\n                    value={this.state.senderMessage}/>\r\n                  </Form.Group>\r\n                  <div className=\"btn-group\">\r\n                  <button className=\"btn btn--cancel\" onClick={this.handleClose}>\r\n                    Cancel\r\n                  </button>\r\n                <button variant=\"primary\" type=\"submit\" value=\"submit\" className=\"btn btn--submit\">\r\n                  Send\r\n                </button>\r\n                </div>\r\n              </Form>\r\n            </Card>\r\n        </div>\r\n\r\n    )\r\n}\r\n}\r\n\r\nexport default MessageMe;"]},"metadata":{},"sourceType":"module"}