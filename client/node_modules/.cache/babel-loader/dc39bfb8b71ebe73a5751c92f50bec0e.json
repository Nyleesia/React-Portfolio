{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nylee\\\\OneDrive\\\\Documents\\\\React\\\\React-Portfolio\\\\client\\\\src\\\\components\\\\messageMe.component.js\";\nimport React, { Component } from \"react\";\nimport { Card, Form, Col, Button } from \"react-bootstrap\";\n\nclass MessageMe extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      senderName: \"\",\n      senderEmail: \"\",\n      senderMessage: \"\"\n    };\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const user = this.props.env.USER_ID;\n    this.sendMessage(this.state.senderEmail, this.state.senderMessage, this.state.senderName, user);\n    this.setState({\n      formSubmitted: true\n    });\n  }\n\n  sendFeedback(templateId, senderEmail, receiverEmail, feedback, user) {\n    window.emailjs.send('default_service', // default email provider in your EmailJS account\n    templateId, {\n      senderEmail,\n      receiverEmail,\n      feedback\n    }, user).then(res => {\n      this.setState({\n        formEmailSent: true\n      });\n    }) // Handle errors here however you like, or use a React error boundary\n    .catch(err => console.error('Failed to send feedback. Error: ', err));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"messageMeContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"messageInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"    \", React.createElement(\"h3\", {\n      className: \"contactCardHead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Message Me\"), React.createElement(Form, {\n      className: \"messageForm\",\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"Name\",\n      id: \"name\",\n      name: \"senderName\",\n      onChange: handleChange,\n      placeholder: \"Enter your name here\",\n      required: true,\n      value: senderName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), \" \", React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"email\",\n      placeholder: \"Enter email address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      controlId: \"formGridMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Message\"), React.createElement(\"textarea\", {\n      id: \"message\",\n      name: \"senderMessage\",\n      onChange: handleChange,\n      placeholder: \"Enter your message here\",\n      required: true,\n      value: senderMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"btn-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn--cancel\",\n      onClick: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(\"button\", {\n      variant: \"primary\",\n      type: \"submit\",\n      value: \"submit\",\n      className: \"btn btn--submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Send\")))));\n  }\n\n}\n\nexport default MessageMe;","map":{"version":3,"sources":["C:/Users/nylee/OneDrive/Documents/React/React-Portfolio/client/src/components/messageMe.component.js"],"names":["React","Component","Card","Form","Col","Button","MessageMe","state","senderName","senderEmail","senderMessage","handleSubmit","event","preventDefault","user","props","env","USER_ID","sendMessage","setState","formSubmitted","sendFeedback","templateId","receiverEmail","feedback","window","emailjs","send","then","res","formEmailSent","catch","err","console","error","render","handleChange","handleClose"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"; \r\nimport { Card, Form, Col, Button } from \"react-bootstrap\";\r\n\r\nclass MessageMe extends Component {\r\n  state = { \r\n    senderName: \"\",\r\n    senderEmail: \"\",\r\n    senderMessage: \"\"\r\n  }\r\n\r\n handleSubmit (event) {\r\n        event.preventDefault()\r\n\r\n        const {\r\n          USER_ID: user\r\n        } = this.props.env\r\n                \r\n          this.sendMessage(\r\n          this.state.senderEmail,\r\n          this.state.senderMessage,\r\n          this.state.senderName,\r\n          user\r\n        )\r\n\r\n        this.setState({\r\n          formSubmitted: true\r\n        })\r\n      }\r\n\r\n       sendFeedback (templateId, senderEmail, receiverEmail, feedback, user) {\r\n        window.emailjs.send(\r\n          'default_service', // default email provider in your EmailJS account\r\n          templateId,\r\n          {\r\n            senderEmail,\r\n            receiverEmail,\r\n            feedback\r\n          },\r\n          user\r\n        )\r\n          .then(res => {\r\n            this.setState({ formEmailSent: true })\r\n          })\r\n          // Handle errors here however you like, or use a React error boundary\r\n          .catch(err => console.error('Failed to send feedback. Error: ', err))\r\n      }\r\n\r\n  render(){\r\n\r\n\r\n\r\n    return(\r\n        <div className = \"messageMeContainer\">\r\n          <Card className = \"messageInfo\">    <h3 className =\"contactCardHead\">Message Me</h3> \r\n            <Form className = \"messageForm\" onSubmit={handleSubmit}>\r\n              <Form.Row>\r\n                <Form.Group as={Col} controlId=\"formGridName\">\r\n                  <Form.Label>Name</Form.Label>\r\n                  <input type=\"Name\" \r\n                  id=\"name\"\r\n                  name=\"senderName\"\r\n                  onChange={handleChange}\r\n                  placeholder=\"Enter your name here\"\r\n                  required\r\n                  value={senderName}\r\n                  />\r\n\r\n                  </Form.Group> <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <input type=\"email\" placeholder=\"Enter email address\" />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                  <Form.Group controlId=\"formGridMessage\">\r\n                    <Form.Label>Message</Form.Label>\r\n                    <textarea \r\n                    id=\"message\"\r\n                    name=\"senderMessage\"\r\n                    onChange={handleChange}\r\n                    placeholder=\"Enter your message here\"\r\n                    required\r\n                    value={senderMessage}/>\r\n                  </Form.Group>\r\n                  <div className=\"btn-group\">\r\n                  <button className=\"btn btn--cancel\" onClick={handleClose}>\r\n                    Cancel\r\n                  </button>\r\n                <button variant=\"primary\" type=\"submit\" value=\"submit\" className=\"btn btn--submit\">\r\n                  Send\r\n                </button>\r\n                </div>\r\n              </Form>\r\n            </Card>\r\n        </div>\r\n\r\n    )\r\n}\r\n}\r\n\r\nexport default MessageMe;"]},"metadata":{},"sourceType":"module"}